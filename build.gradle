buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url "https://maven.eveoh.nl/content/repositories/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://packages.confluent.io/maven' }
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:4.0.0"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'distribution'
    apply plugin: 'com.diffplug.gradle.spotless'

//    sourceCompatibility = 1.8
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "http://artifactory.rivigo.com/artifactory/libs-release-local" }
        maven { url "http://artifactory.rivigo.com/artifactory/libs-snapshot-local" }
        maven { url 'https://packages.confluent.io/maven/' }
    }
    dependencies {
        annotationProcessor("org.projectlombok:lombok:1.18.4")
        testAnnotationProcessor("org.projectlombok:lombok:1.18.4")
    }

    jacocoTestReport {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        files(sourceSets.main.allJava.srcDirs)
        reports {
            xml.enabled true
            csv.enabled false
        }
    }
    
    tasks.create(name: 'gitExecutableHooks') {
        doLast {
            Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
        }
    }

    task installGitHooks(type: Copy) {
        from ".git-hooks/src/hooks/pre-push/gradle/pre-push",".git-hooks/src/hooks/pre-commit/commit-msg"
        into ".git/hooks"
    }

    wrapper {
        gradleVersion = '5.6.3'
        distributionUrl = distributionUrl.replace("bin", "all")
    }
    
    gitExecutableHooks.dependsOn(installGitHooks)
    processResources.dependsOn('spotlessApply')
    processResources.dependsOn(gitExecutableHooks)

    task copyToLib(type: Copy) {
        into "$buildDir/libs"
        from configurations.runtime
    }

    test.finalizedBy(jacocoTestReport)
    build.finalizedBy(copyToLib)

}

subprojects {

    ext{
        zoomVersion = System.getProperty('zoom.version', '4.1-SNAPSHOT')
    }

    dependencies {
        compile group: "com.typesafe.akka", name: "akka-stream-kafka_2.11", version: "1.0-RC1"
        compile "org.slf4j:slf4j-api:1.7.25"
        compile "com.h2database:h2:1.4.196"
        compile("com.rivigo:zoom-commons:$zoomVersion") {
            exclude module: 'jira-rest-java-client-api'
            exclude module: 'jira-rest-java-client-core'
            exclude module: 'slf4j-log4j12'
            exclude module: 'jackson-databind'
            exclude module: 'cms-external-api'
            exclude module: 'rivigo-finance-external-api'
            exclude module: 'aws-java-sdk'
            exclude module: 'scala-library'
            exclude module: 'spring-boot-starter-data-jpa'
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter'
        }

        compile('com.rivigo.security:rivigo-security-resource-server-commons:3.1.14')
        compile('com.rivigo.collections:collections-api:1.1.13'){
            exclude module: 'spring-web'
            exclude module: 'spring-data-commons'
            exclude group: 'org.bouncycastle'
        }

        compile("com.rivigo:rivigo-finance-external-api:1.0.2.7160-SNAPSHOT") {
            exclude module: 'cms-external-api'
        }

        compile "com.fasterxml.jackson.core:jackson-databind:2.9.0"
        compile "org.jboss.netty:netty:3.2.10.Final"
        
        compile group: 'junit', name: 'junit', version: '4.12'

        testCompile "org.mockito:mockito-core:1.+"
    }
}